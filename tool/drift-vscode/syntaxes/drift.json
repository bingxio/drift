{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "drift",
    "patterns": [{
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#comment-block"
        },
        {
            "include": "#identifier"
        },
        {
            "include": "#number"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#member"
        },
        {
            "include": "#function"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                "name": "keyword.control.ft",
                "match": "\\b(def|if|ef|nf|aop|for|ret|end|mod|new|use|out|go|del)\\b"
            }]
        },
        "strings": {
            "name": "string.quoted.double.ft",
            "begin": "\"",
            "end": "\"",
            "patterns": [{
                "name": "constant.character.escape.ft",
                "match": "\\\\."
            }]
        },
        "comment": {
            "name": "comment.line.ft",
            "begin": "\\//",
            "end": "\\n",
            "patterns": [
                {}
            ]
        },
        "comment-block": {
            "name": "comment.block.ft",
            "begin": "\\/\\*",
            "end": "\\*/",
            "patterns": [
                {}
            ]
        },
        "identifier": {
            "patterns": [{
                "name": "identifier.ft",
                "match": "\\b[_A-Za-z]\\w+\\b"
            }]
        },
        "number": {
            "patterns": [{
                "name": "constant.numeric.ft",
                "match": "0x[a-fA-F0-9]+|\\d+|(\\d+\\.?|\\.\\d)\\d*([eE][+-]?\\d+)?"
            }]
        },
        "operator": {
            "patterns": [{
                "name": "keyword.operator.ft",
                "match": "\\(|\\)|\\[|\\]|\\.|-|\\!|~|\\*|/|%|\\+|&|\\^|\\|<|>!=|:"
            }]
        },
        "member": {
            "patterns": [{
                "match": "\\.([a-zA-Z_][a-zA-Z0-9_]*)",
                "captures": {
                    "0": {
                        "name": "entity.other.attribute-name.ft"
                    }
                }
            }]
        },
        "function": {
            "patterns": [{
                "name": "entity.name.function.ft",
                "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\())"
            }]
        }
    },
    "scopeName": "source.ft"
}